spring:
  application:
    name: gatewayserver
# Configuracion de conexion al configserver
  config:
    import:
    - "optional:configserver:http://localhost:8071/"
  cloud:
    gateway:
# Activa el "Service Discovery Locator", 
# una característica que permite enrutar dinámicamente las solicitudes
# a servicios registrados en un servidor de descubrimiento como Eureka
      discovery:
        locator:
          enabled: false
          lowerCaseServiceId: true
# Configurando el timeout para todos los request en feign
# Se sobreescribe la configuracion por default que viene con circuitbreaker para los endpoints que lo utilizan
      httpclient:
        connectTimeout: 1000 # Define cuánto tiempo máximo el Gateway va a esperar para establecer la conexión TCP con el servicio de destino
        responseTimeout: 5s # Define el tiempo máximo que el Gateway esperará por la respuesta completa del servicio de destino después de que la conexión se haya establecido y se haya enviado la petición.
# Configuracion de actuator
management:
  endpoints:
    web:
      exposure:
        include:
        - health
        - info
        - gateway
        - metrics
        - circuitbreakers
        - circuitbreakerevents
## permite acceder al endpoint /actuator/gateway desde cualquier origen sin autenticación
  endpoint:
    gateway:
      access: unrestricted      
## Agrega automáticamente al endpoint /actuator/info todas las variables de entorno disponibles
  info:
    env:
      enabled: true
#Configuracion informacion mostrada en el endpoint de actuator /actuator/info
info:
  app:
    name: "gatewayserver"
    description: "EazyBank Gateway Server Application"
    version: "1.0.0"
#Estableciendo la configuracion de logging DEBUG en el paquete com.eazybites.gatewayserver del proyecto
logging:
  level:
    com:
      eazybites:
        gatewayserver: DEBUG
#Configuracion de resilience4j
resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 10 # Monitoreando los ultimos 10 request para calcular el porcentaje de fallos.
        minimumNumberOfCalls: 5 # número mínimo de llamadas que deben existir en la ventana antes de calcular el ratio de fallos (de los mencionados en slidingWindowSize )  
        permittedNumberOfCallsInHalfOpenState: 2 # cuántas llamadas de prueba se permiten en HALF_OPEN state
        failureRateThreshold: 50 # umbral de porcentaje de fallos que dispara la apertura de circuito abierto
        waitDurationInOpenState: 10000 # tiempo que el CB permanece OPEN antes de permitir pruebas. (en milisegundos)
